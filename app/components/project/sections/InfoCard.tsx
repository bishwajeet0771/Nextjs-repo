import { formatCurrency } from "@/app/utils/numbers";
import clsx from "clsx";
import React from "react";

// type Props = {};

export default function InfoCard(data: any) {
  return (
    <div
      className={clsx(
        "inline-flex flex-col justify-center items-start gap-2.5 p-2.5 rounded  bg-[#fff] font-feature-settings-['clig' 0, 'liga' 0] cursor-pointer mr-6 rounded shadow-[0px_4px_20px_0px_rgba(146,178,200,0.10)] border-[0.5px] border-solid border-[#BBC3C9]",
        data.active &&
          "!shadow-[0px_4px_19.7px_0px_rgba(149,188,150,0.51)] !border-solid !border-[#148B16]"
      )}
      onClick={data.cardClick}
    >
      <div className="flex items-center gap-3 rounded pr-1 bg-[#F0F3F4]">
        <div className="flex flex-col justify-center items-start gap-1.5 rounded p-1 text-nowrap   bg-[#C0DDC0] text-[#242424] text-lg not-italic font-medium leading-[normal]">
          {data.label}
        </div>
        <div className="text-[#001F35] !text-nowrap text-base not-italic font-semibold">
          {formatCurrency(data.minPrice)} - {formatCurrency(data.maxPrice)}
        </div>
      </div>
      <p className="text-[#242424] text-nowrap text-base not-italic font-medium inline-flex gap-2">
        {config.icons.superBuildup}{" "}
        {data.propCgId === 32 ? "Plot" : "Super Builtup"} Area:{" "}
        {data.propCgId === 32 && (
          <span className="text-[#001F35] text-base not-italic font-semibold">
            {`${data.plotArea} sq.ft`}
          </span>
        )}
      </p>
      {data.propCgId !== 32 && (
        <p className="text-[#001F35] text-base not-italic font-semibold">
          {`${data.minSba} sq.ft - ${data.maxSba} sq.ft`}
        </p>
      )}
    </div>
  );
}

const config = {
  icons: {
    superBuildup: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="22"
        height="22"
        viewBox="0 0 22 22"
        fill="none"
      >
        <path
          d="M18.5632 15.2233V6.7781C19.0324 6.65788 19.4613 6.41565 19.8066 6.07602C20.1519 5.73638 20.4011 5.31143 20.529 4.84432C20.6569 4.37721 20.6589 3.88457 20.5349 3.41643C20.4108 2.94828 20.1651 2.5213 19.8226 2.17885C19.4801 1.83639 19.0532 1.59065 18.585 1.46658C18.1169 1.34252 17.6242 1.34454 17.1571 1.47244C16.69 1.60035 16.2651 1.84958 15.9254 2.19484C15.5858 2.54009 15.3436 2.96907 15.2233 3.43822H6.7781C6.65788 2.96907 6.41565 2.54009 6.07602 2.19484C5.73638 1.84958 5.31143 1.60035 4.84432 1.47244C4.37721 1.34454 3.88457 1.34252 3.41643 1.46658C2.94828 1.59065 2.5213 1.83639 2.17885 2.17885C1.83639 2.5213 1.59065 2.94828 1.46658 3.41643C1.34252 3.88457 1.34454 4.37721 1.47244 4.84432C1.60035 5.31143 1.84958 5.73638 2.19484 6.07602C2.54009 6.41565 2.96907 6.65788 3.43822 6.7781V15.2233C2.96907 15.3436 2.54009 15.5858 2.19484 15.9254C1.84958 16.2651 1.60035 16.69 1.47244 17.1571C1.34454 17.6242 1.34252 18.1169 1.46658 18.585C1.59065 19.0532 1.83639 19.4801 2.17885 19.8226C2.5213 20.1651 2.94828 20.4108 3.41643 20.5349C3.88457 20.6589 4.37721 20.6569 4.84432 20.529C5.31143 20.4011 5.73638 20.1519 6.07602 19.8066C6.41565 19.4613 6.65788 19.0324 6.7781 18.5632H15.2233C15.3436 19.0324 15.5858 19.4613 15.9254 19.8066C16.2651 20.1519 16.69 20.4011 17.1571 20.529C17.6242 20.6569 18.1169 20.6589 18.585 20.5349C19.0532 20.4108 19.4801 20.1651 19.8226 19.8226C20.1651 19.4801 20.4108 19.0532 20.5349 18.585C20.6589 18.1169 20.6569 17.6242 20.529 17.1571C20.4011 16.69 20.1519 16.2651 19.8066 15.9254C19.4613 15.5858 19.0324 15.3436 18.5632 15.2233ZM17.8757 2.75072C18.1477 2.75072 18.4135 2.83136 18.6396 2.98245C18.8657 3.13354 19.042 3.34828 19.1461 3.59953C19.2501 3.85078 19.2774 4.12725 19.2243 4.39397C19.1712 4.6607 19.0403 4.9057 18.848 5.09799C18.6557 5.29029 18.4107 5.42125 18.144 5.4743C17.8772 5.52736 17.6008 5.50013 17.3495 5.39606C17.0983 5.29199 16.8835 5.11575 16.7325 4.88963C16.5814 4.66351 16.5007 4.39767 16.5007 4.12572C16.5011 3.76116 16.6461 3.41164 16.9039 3.15385C17.1616 2.89607 17.5112 2.75109 17.8757 2.75072ZM2.75072 4.12572C2.75072 3.85377 2.83136 3.58793 2.98245 3.36181C3.13354 3.1357 3.34828 2.95946 3.59953 2.85539C3.85078 2.75132 4.12725 2.72409 4.39397 2.77714C4.6607 2.8302 4.9057 2.96115 5.09799 3.15345C5.29029 3.34575 5.42125 3.59075 5.4743 3.85747C5.52736 4.1242 5.50013 4.40066 5.39606 4.65191C5.29199 4.90316 5.11575 5.11791 4.88963 5.26899C4.66351 5.42008 4.39767 5.50072 4.12572 5.50072C3.76116 5.50036 3.41164 5.35538 3.15385 5.09759C2.89607 4.83981 2.75109 4.49028 2.75072 4.12572ZM4.12572 19.2507C3.85377 19.2507 3.58793 19.1701 3.36181 19.019C3.1357 18.8679 2.95946 18.6532 2.85539 18.4019C2.75132 18.1507 2.72409 17.8742 2.77714 17.6075C2.8302 17.3407 2.96115 17.0957 3.15345 16.9035C3.34575 16.7112 3.59075 16.5802 3.85747 16.5271C4.1242 16.4741 4.40066 16.5013 4.65191 16.6054C4.90316 16.7095 5.11791 16.8857 5.26899 17.1118C5.42008 17.3379 5.50072 17.6038 5.50072 17.8757C5.50036 18.2403 5.35538 18.5898 5.09759 18.8476C4.83981 19.1054 4.49028 19.2504 4.12572 19.2507ZM15.2233 17.1882H6.7781C6.65495 16.7155 6.40794 16.2843 6.06255 15.9389C5.71716 15.5935 5.2859 15.3465 4.81322 15.2233V6.7781C5.28586 6.65488 5.7171 6.40785 6.06248 6.06248C6.40785 5.7171 6.65488 5.28586 6.7781 4.81322H15.2233C15.3465 5.2859 15.5935 5.71716 15.9389 6.06255C16.2843 6.40794 16.7155 6.65495 17.1882 6.7781V15.2233C16.7155 15.3464 16.2842 15.5934 15.9388 15.9388C15.5934 16.2842 15.3464 16.7155 15.2233 17.1882ZM17.8757 19.2507C17.6038 19.2507 17.3379 19.1701 17.1118 19.019C16.8857 18.8679 16.7095 18.6532 16.6054 18.4019C16.5013 18.1507 16.4741 17.8742 16.5271 17.6075C16.5802 17.3407 16.7112 17.0957 16.9035 16.9035C17.0957 16.7112 17.3407 16.5802 17.6075 16.5271C17.8742 16.4741 18.1507 16.5013 18.4019 16.6054C18.6532 16.7095 18.8679 16.8857 19.019 17.1118C19.1701 17.3379 19.2507 17.6038 19.2507 17.8757C19.2502 18.2402 19.1051 18.5896 18.8474 18.8474C18.5896 19.1051 18.2402 19.2502 17.8757 19.2507Z"
          fill="#148B16"
        />
      </svg>
    ),
  },
};
