import { ImgNotAvail } from "@/app/data/project";
import { PopupOpenSvg } from "@/app/images/commonSvgs";
import Image from "next/image";
import React from "react";

// type Props = {};

export default function Card(data: any) {
  return (
    <div
      className="flex flex-col justify-center items-center gap-2.5 rounded p-1 border-[0.5px] border-solid border-[#D2D5D7]"
      onClick={() => data.cardClick()}
    >
      <div className="w-[286px]  shrink-0 rounded-sm bg-white cursor-pointer relative">
        <Image src={data.floorPlan??ImgNotAvail} alt="image" width={286} height={167} className="max-h-[180px]" priority  />
        <PopupOpenSvg className="w-[24px] h-[24px] lg:w-[28px] lg:h-[28px]  absolute right-1 bottom-0" />
      </div>
      <div className="flex flex-col justify-center items-start gap-1.5 pl-1 pr-[44px] py-1 rounded-md bg-[#edf2f5]">
        <p className="text-[#242424] text-sm not-italic font-semibold inline-flex gap-2 items-center">
          {config.icons.superBuildup} {data.propType == 32 ?
        ` Plot Area: ${data.plotArea} sq.ft` :
        ` Super Builtup Area: ${data.sba} sq.ft`}
        </p>
        <p className="text-[#242424] text-xs not-italic font-semibold">
          {data.unitType} | {data.type}
        </p>
      </div>
    </div>
  );
}

const config = {
  icons: {
    superBuildup: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="14"
        height="15"
        viewBox="0 0 14 15"
        fill="none"
      >
        <path
          d="M11.813 10.1871V4.81285C12.1115 4.73634 12.3845 4.5822 12.6042 4.36607C12.8239 4.14994 12.9825 3.87952 13.0639 3.58226C13.1453 3.28501 13.1466 2.97151 13.0676 2.6736C12.9887 2.37569 12.8323 2.10398 12.6144 1.88605C12.3965 1.66812 12.1247 1.51174 11.8268 1.43279C11.5289 1.35384 11.2154 1.35513 10.9182 1.43652C10.6209 1.51792 10.3505 1.67652 10.1344 1.89623C9.91823 2.11593 9.76409 2.38892 9.68759 2.68747H4.31333C4.23683 2.38892 4.08269 2.11593 3.86656 1.89623C3.65042 1.67652 3.38 1.51792 3.08275 1.43652C2.7855 1.35513 2.472 1.35384 2.17409 1.43279C1.87618 1.51174 1.60446 1.66812 1.38654 1.88605C1.16861 2.10398 1.01223 2.37569 0.93328 2.6736C0.854328 2.97151 0.855615 3.28501 0.937009 3.58226C1.0184 3.87952 1.17701 4.14994 1.39672 4.36607C1.61642 4.5822 1.88941 4.73634 2.18796 4.81285V10.1871C1.88941 10.2636 1.61642 10.4177 1.39672 10.6339C1.17701 10.85 1.0184 11.1204 0.937009 11.4177C0.855615 11.7149 0.854328 12.0284 0.93328 12.3263C1.01223 12.6243 1.16861 12.896 1.38654 13.1139C1.60446 13.3318 1.87618 13.4882 2.17409 13.5672C2.472 13.6461 2.7855 13.6448 3.08275 13.5634C3.38 13.482 3.65042 13.3234 3.86656 13.1037C4.08269 12.884 4.23683 12.611 4.31333 12.3125H9.68759C9.76409 12.611 9.91823 12.884 10.1344 13.1037C10.3505 13.3234 10.6209 13.482 10.9182 13.5634C11.2154 13.6448 11.5289 13.6461 11.8268 13.5672C12.1247 13.4882 12.3965 13.3318 12.6144 13.1139C12.8323 12.896 12.9887 12.6243 13.0676 12.3263C13.1466 12.0284 13.1453 11.7149 13.0639 11.4177C12.9825 11.1204 12.8239 10.85 12.6042 10.6339C12.3845 10.4177 12.1115 10.2636 11.813 10.1871ZM11.3755 2.24997C11.5485 2.24997 11.7177 2.30129 11.8616 2.39744C12.0055 2.49358 12.1176 2.63024 12.1839 2.79012C12.2501 2.95001 12.2674 3.12594 12.2336 3.29568C12.1999 3.46541 12.1165 3.62132 11.9942 3.74369C11.8718 3.86606 11.7159 3.9494 11.5462 3.98316C11.3764 4.01692 11.2005 3.99959 11.0406 3.93337C10.8807 3.86714 10.7441 3.75499 10.6479 3.6111C10.5518 3.4672 10.5005 3.29803 10.5005 3.12497C10.5005 2.89291 10.5926 2.67035 10.7567 2.50625C10.9208 2.34216 11.1434 2.24997 11.3755 2.24997ZM1.75046 3.12497C1.75046 2.95191 1.80178 2.78274 1.89792 2.63885C1.99407 2.49495 2.13073 2.3828 2.29061 2.31658C2.4505 2.25035 2.62643 2.23302 2.79616 2.26678C2.9659 2.30055 3.12181 2.38388 3.24418 2.50625C3.36655 2.62862 3.44989 2.78453 3.48365 2.95427C3.51741 3.124 3.50008 3.29993 3.43385 3.45982C3.36763 3.61971 3.25548 3.75636 3.11158 3.85251C2.96769 3.94865 2.79852 3.99997 2.62546 3.99997C2.3934 3.99997 2.17084 3.90778 2.00674 3.74369C1.84265 3.5796 1.75046 3.35704 1.75046 3.12497ZM2.62546 12.75C2.4524 12.75 2.28323 12.6987 2.13934 12.6025C1.99544 12.5064 1.88329 12.3697 1.81707 12.2098C1.75084 12.0499 1.73351 11.874 1.76727 11.7043C1.80103 11.5345 1.88437 11.3786 2.00674 11.2563C2.12911 11.1339 2.28502 11.0505 2.45476 11.0168C2.62449 10.983 2.80042 11.0004 2.96031 11.0666C3.12019 11.1328 3.25685 11.245 3.353 11.3888C3.44914 11.5327 3.50046 11.7019 3.50046 11.875C3.50046 12.107 3.40827 12.3296 3.24418 12.4937C3.08008 12.6578 2.85752 12.75 2.62546 12.75ZM9.68759 11.4375H4.31333C4.23472 11.1368 4.07745 10.8625 3.85769 10.6427C3.63794 10.423 3.36363 10.2657 3.06296 10.1871V4.81285C3.36363 4.73423 3.63794 4.57696 3.85769 4.35721C4.07745 4.13745 4.23472 3.86314 4.31333 3.56247H9.68759C9.7662 3.86314 9.92347 4.13745 10.1432 4.35721C10.363 4.57696 10.6373 4.73423 10.938 4.81285V10.1871C10.6371 10.2653 10.3626 10.4224 10.1427 10.6422C9.92292 10.8621 9.76579 11.1366 9.68759 11.4375ZM11.3755 12.75C11.2024 12.75 11.0332 12.6987 10.8893 12.6025C10.7454 12.5064 10.6333 12.3697 10.5671 12.2098C10.5008 12.0499 10.4835 11.874 10.5173 11.7043C10.551 11.5345 10.6344 11.3786 10.7567 11.2563C10.8791 11.1339 11.035 11.0505 11.2048 11.0168C11.3745 10.983 11.5504 11.0004 11.7103 11.0666C11.8702 11.1328 12.0069 11.245 12.103 11.3888C12.1991 11.5327 12.2505 11.7019 12.2505 11.875C12.2501 12.1069 12.1578 12.3293 11.9938 12.4933C11.8298 12.6573 11.6074 12.7496 11.3755 12.75Z"
          fill="#148B16"
        />
      </svg>
    ),
  },
};
